name: build_and_package_installers

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build_windows:
    if: ${{ true }}  # disable for now

    runs-on: windows-latest
    steps:
      - name: Download Wix
        uses: i3h/download-release-asset@v1
        with:
          owner: wixtoolset
          repo: wix3
          tag: wix3112rtm
          file: wix311-binaries.zip

      - name: Decompress Wix
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: wix311-binaries.zip
          pathTarget: ./target/wix

      - name: Add Wix to Path
        run: echo "$HOME/target/wix" >> $GITHUB_PATH

      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B clean install --file pom.xml


      - name: testing testing
        run: ls
        shell: bash
      - name: testing testing
        run: ls ./target/modules
        shell: bash
      - name: testing testing
        run: dir
        shell: bash
      - name: testing testing
        run: jlink --add-modules hellofx --module-path target/javafx-poc-1.0.0-SNAPSHOT.jar:target/modules/opencv-4.5.1-2.jar:target/modules/lombok-1.18.22.jar:target/modules/slf4j-api-1.8.0-beta4.jar:target/modules/slf4j-simple-1.8.0-beta4.jar:target/modules/javafx-fxml-16-windows.jar:target/modules/javafx-controls-16-windows.jar:target/modules/javafx-base-16-windows.jar:target/modules/javafx-graphics-16-windows.jar --output target/jlink-image --launcher helloFxApp=hellofx/ortwin.Main
        shell: bash



      - name: Update Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN}}"
          automatic_release_tag: "Windows-latest"
          prerelease: true
          title: "Windows Development Build"
          files: ./target/windows/*.msi


  build_ubuntu:
    if: ${{ false }}  # disable for now

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: chmod
        run: chmod +x package_linux.sh
        shell: bash

      - name: Package linux
        run: ./package_linux.sh
        shell: bash

      - name: Update Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN}}"
          automatic_release_tag: "linux-latest"
          prerelease: true
          title: "Linux Development Build"
          files: ./target/linux/*.deb


  build_mac:
    if: ${{ false }}  # disable for now

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: chmod
        run: chmod +x package_osx.sh
        shell: bash

      - name: package_osx.sh
        run: ./package_osx.sh
        shell: bash

      - name: Update Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN}}"
          automatic_release_tag: "macOS-latest"
          prerelease: true
          title: "macOS Development Build"
          files: ./target/mac/*.dmg

#  package_windows:
#    runs-on: windows-latest
#    needs: [build_and_test]
#    steps:
#      - name: Download Wix
#        uses: i3h/download-release-asset@v1
#        with:
#          owner: wixtoolset
#          repo: wix3
#          tag: wix3112rtm
#          file: wix311-binaries.zip
#      - name: Decompress Wix
#        uses: DuckSoft/extract-7z-action@v1.0
#        with:
#          pathSource: wix311-binaries.zip
#          pathTarget: ./target/wix
#      - name: Add Wix to Path
#        run: echo "$HOME/target/wix" >> $GITHUB_PATH
#
#      # BEGIN: This is a copy from the job above
#      - uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#
#      - name: Cache the Maven packages to speed up build
#        uses: actions/cache@v1
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#
#      - name: Build with Maven
#        run: mvn -B clean package --file pom.xml
#      # END: This is a copy from the job above
#
#
#
#      - name: JLink and JPackage for windows
#        run: package_win.bat
#        shell: cmd
#
#      - name: dir
#        run: dir
#        shell: bash
